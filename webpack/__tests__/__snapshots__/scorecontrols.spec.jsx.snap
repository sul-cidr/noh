// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ScoreControls> renders as expected by default 1`] = `
<div
  className="score-controls"
>
  <div
    className="sentence-control"
  >
    <div
      className="sentence-control__prev"
    >
      <i
        className="fas fa-step-backward"
      />
    </div>
    <div
      className="sentence-control__status"
    >
      <span
        className="sentence-control__title"
      >
        Sentence:
      </span>
      <span
        className="sentence-control__current"
      >
        13/55
      </span>
    </div>
    <div
      className="sentence-control__next"
    >
      <i
        className="fas fa-step-forward"
      />
    </div>
  </div>
  <div
    className="video-progress"
  >
    <Connect(TimelineIndicator)
      duration={100}
      startTime={0}
    />
  </div>
  <div
    className="score-controls__filters"
  >
    <button
      className="score-controls__filters-button"
      onClick={[Function]}
    >
      Filters
    </button>
    <div
      className="score-controls__filters-popup hidden"
    >
      <ul
        className="channel-toggles"
      >
        <li
          className="toggles__title"
        >
          Lines
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scoreBeat"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scoreBeat"
            >
              <span
                className="custom-checkbox__text"
              >
                Beat
              </span>
            </label>
          </div>
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scoreText"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scoreText"
            >
              <span
                className="custom-checkbox__text"
              >
                Text
              </span>
            </label>
          </div>
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scorePercussion"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scorePercussion"
            >
              <span
                className="custom-checkbox__text"
              >
                Percussion
              </span>
            </label>
          </div>
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scoreNohkan"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scoreNohkan"
            >
              <span
                className="custom-checkbox__text"
              >
                Nohkan
              </span>
            </label>
          </div>
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scoreDance"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scoreDance"
            >
              <span
                className="custom-checkbox__text"
              >
                Dance
              </span>
            </label>
          </div>
        </li>
      </ul>
      <ul
        className="measure-toggles"
      >
        <li
          className="toggles__title"
        >
          Sentences
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scorePrevSentence"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scorePrevSentence"
            >
              <span
                className="custom-checkbox__text"
              >
                Previous Sentence
              </span>
            </label>
          </div>
        </li>
        <li>
          <div
            className="custom-checkbox"
          >
            <input
              checked={true}
              id="scoreNextSentence"
              onChange={[Function]}
              onKeyPress={null}
              type="checkbox"
            />
            <label
              htmlFor="scoreNextSentence"
            >
              <span
                className="custom-checkbox__text"
              >
                Next Sentence
              </span>
            </label>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`<ScoreControls> renders as expected by default with a store 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ScoreControls)
    duration={100}
    updateScoreToggles={[Function]}
  >
    <ScoreControls
      duration={100}
      isBeatOn={true}
      isDanceOn={true}
      isNextSentenceOn={true}
      isNohkanOn={true}
      isPercussionOn={true}
      isPrevSentenceOn={true}
      isTextOn={true}
      startTime={0}
      updateScoreToggles={[Function]}
    >
      <div
        className="score-controls"
      >
        <div
          className="sentence-control"
        >
          <div
            className="sentence-control__prev"
          >
            <i
              className="fas fa-step-backward"
            />
          </div>
          <div
            className="sentence-control__status"
          >
            <span
              className="sentence-control__title"
            >
              Sentence:
            </span>
            <span
              className="sentence-control__current"
            >
              13/55
            </span>
          </div>
          <div
            className="sentence-control__next"
          >
            <i
              className="fas fa-step-forward"
            />
          </div>
        </div>
        <div
          className="video-progress"
        >
          <Connect(TimelineIndicator)
            duration={100}
            startTime={0}
          >
            <TimelineIndicator
              currentTime={0}
              duration={100}
              interval={10}
              playing={false}
              startTime={0}
              updateCurrentTime={[Function]}
            >
              <div
                className="time-indicator-container"
              >
                <Draggable
                  allowAnyClick={false}
                  axis="x"
                  bounds="parent"
                  cancel={null}
                  defaultClassName="react-draggable"
                  defaultClassNameDragged="react-draggable-dragged"
                  defaultClassNameDragging="react-draggable-dragging"
                  defaultPosition={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  disabled={false}
                  enableUserSelectHack={true}
                  grid={null}
                  handle=".time-indicator"
                  offsetParent={null}
                  onDrag={[Function]}
                  onMouseDown={[Function]}
                  onStart={[Function]}
                  onStop={[Function]}
                  position={
                    Object {
                      "x": 0,
                      "y": 0,
                    }
                  }
                  transform={null}
                >
                  <DraggableCore
                    allowAnyClick={false}
                    axis="x"
                    bounds="parent"
                    cancel={null}
                    defaultClassName="react-draggable"
                    defaultClassNameDragged="react-draggable-dragged"
                    defaultClassNameDragging="react-draggable-dragging"
                    defaultPosition={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    disabled={false}
                    enableUserSelectHack={true}
                    grid={null}
                    handle=".time-indicator"
                    offsetParent={null}
                    onDrag={[Function]}
                    onMouseDown={[Function]}
                    onStart={[Function]}
                    onStop={[Function]}
                    position={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    transform={null}
                  >
                    <div
                      className="time-indicator react-draggable"
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "touchAction": "none",
                          "transform": "translate(0px,0px)",
                        }
                      }
                      transform={null}
                    />
                  </DraggableCore>
                </Draggable>
              </div>
            </TimelineIndicator>
          </Connect(TimelineIndicator)>
        </div>
        <div
          className="score-controls__filters"
        >
          <button
            className="score-controls__filters-button"
            onClick={[Function]}
          >
            Filters
          </button>
          <div
            className="score-controls__filters-popup hidden"
          >
            <ul
              className="channel-toggles"
            >
              <li
                className="toggles__title"
              >
                Lines
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scoreBeat"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scoreBeat"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Beat
                    </span>
                  </label>
                </div>
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scoreText"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scoreText"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Text
                    </span>
                  </label>
                </div>
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scorePercussion"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scorePercussion"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Percussion
                    </span>
                  </label>
                </div>
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scoreNohkan"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scoreNohkan"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Nohkan
                    </span>
                  </label>
                </div>
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scoreDance"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scoreDance"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Dance
                    </span>
                  </label>
                </div>
              </li>
            </ul>
            <ul
              className="measure-toggles"
            >
              <li
                className="toggles__title"
              >
                Sentences
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scorePrevSentence"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scorePrevSentence"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Previous Sentence
                    </span>
                  </label>
                </div>
              </li>
              <li>
                <div
                  className="custom-checkbox"
                >
                  <input
                    checked={true}
                    id="scoreNextSentence"
                    onChange={[Function]}
                    onKeyPress={null}
                    type="checkbox"
                  />
                  <label
                    htmlFor="scoreNextSentence"
                  >
                    <span
                      className="custom-checkbox__text"
                    >
                      Next Sentence
                    </span>
                  </label>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </ScoreControls>
  </Connect(ScoreControls)>
</Provider>
`;
