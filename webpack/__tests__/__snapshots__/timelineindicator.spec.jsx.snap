// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`<TimelineIndicator> renders as expected with interval, currentTime, and is not playing 1`] = `
<div>
  <Draggable
    allowAnyClick={false}
    axis="x"
    bounds={
      {
        "left": -1,
        "right": 1,
      }
    }
    cancel={null}
    defaultClassName="react-draggable"
    defaultClassNameDragged="react-draggable-dragged"
    defaultClassNameDragging="react-draggable-dragging"
    defaultPosition={
      {
        "x": 0,
        "y": 0,
      }
    }
    disabled={false}
    enableUserSelectHack={true}
    grid={null}
    handle=".time-indicator"
    offsetParent={null}
    onDrag={[Function]}
    onMouseDown={[Function]}
    onStart={[Function]}
    onStop={[Function]}
    position={
      {
        "x": 1,
        "y": 0,
      }
    }
    scale={1}
    transform={null}
  >
    <div
      className="time-indicator"
    />
  </Draggable>
</div>
`;

exports[`<TimelineIndicator> renders as expected with interval, currentTime, and is playing 1`] = `
<div>
  <Draggable
    allowAnyClick={false}
    axis="x"
    bounds={
      {
        "left": -1,
        "right": 1,
      }
    }
    cancel={null}
    defaultClassName="react-draggable"
    defaultClassNameDragged="react-draggable-dragged"
    defaultClassNameDragging="react-draggable-dragging"
    defaultPosition={
      {
        "x": 0,
        "y": 0,
      }
    }
    disabled={false}
    enableUserSelectHack={true}
    grid={null}
    handle=".time-indicator"
    offsetParent={null}
    onDrag={[Function]}
    onMouseDown={[Function]}
    onStart={[Function]}
    onStop={[Function]}
    position={
      {
        "x": 1,
        "y": 0,
      }
    }
    scale={1}
    transform={null}
  >
    <div
      className="time-indicator"
    />
  </Draggable>
</div>
`;

exports[`<TimelineIndicator> renders as expected with no interval, currentTime, and is not playing 1`] = `
<div>
  <Draggable
    allowAnyClick={false}
    axis="x"
    bounds={
      {
        "left": -1,
        "right": 1,
      }
    }
    cancel={null}
    defaultClassName="react-draggable"
    defaultClassNameDragged="react-draggable-dragged"
    defaultClassNameDragging="react-draggable-dragging"
    defaultPosition={
      {
        "x": 0,
        "y": 0,
      }
    }
    disabled={false}
    enableUserSelectHack={true}
    grid={null}
    handle=".time-indicator"
    offsetParent={null}
    onDrag={[Function]}
    onMouseDown={[Function]}
    onStart={[Function]}
    onStop={[Function]}
    position={
      {
        "x": 1,
        "y": 0,
      }
    }
    scale={1}
    transform={null}
  >
    <div
      className="time-indicator"
    />
  </Draggable>
</div>
`;

exports[`<TimelineIndicator> renders as expected with no interval, currentTime, and is playing 1`] = `
<div>
  <Draggable
    allowAnyClick={false}
    axis="x"
    bounds={
      {
        "left": -1,
        "right": 1,
      }
    }
    cancel={null}
    defaultClassName="react-draggable"
    defaultClassNameDragged="react-draggable-dragged"
    defaultClassNameDragging="react-draggable-dragging"
    defaultPosition={
      {
        "x": 0,
        "y": 0,
      }
    }
    disabled={false}
    enableUserSelectHack={true}
    grid={null}
    handle=".time-indicator"
    offsetParent={null}
    onDrag={[Function]}
    onMouseDown={[Function]}
    onStart={[Function]}
    onStop={[Function]}
    position={
      {
        "x": 1,
        "y": 0,
      }
    }
    scale={1}
    transform={null}
  >
    <div
      className="time-indicator"
    />
  </Draggable>
</div>
`;

exports[`<TimelineIndicator> renders as expected with no interval, initial currentTime, and is not playing 1`] = `
<div>
  <Draggable
    allowAnyClick={false}
    axis="x"
    bounds={
      {
        "left": -1,
        "right": 1,
      }
    }
    cancel={null}
    defaultClassName="react-draggable"
    defaultClassNameDragged="react-draggable-dragged"
    defaultClassNameDragging="react-draggable-dragging"
    defaultPosition={
      {
        "x": 0,
        "y": 0,
      }
    }
    disabled={false}
    enableUserSelectHack={true}
    grid={null}
    handle=".time-indicator"
    offsetParent={null}
    onDrag={[Function]}
    onMouseDown={[Function]}
    onStart={[Function]}
    onStop={[Function]}
    position={
      {
        "x": -1,
        "y": 0,
      }
    }
    scale={1}
    transform={null}
  >
    <div
      className="time-indicator"
    />
  </Draggable>
</div>
`;
